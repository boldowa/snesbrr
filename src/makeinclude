CC = gcc
CXX = g++
AR = ar
WINDRES = windres
ifdef _WIN32
  MINGW_PREF = i686-w64-mingw32-
  CC = $(MINGW_PREF)gcc
  CXX = $(MINGW_PREF)g++
  AR = $(MINGW_PREF)ar
  WINDRES = $(MINGW_PREF)windres
endif
CPP = $(CC) -E
RM = rm -f

CFLAGS = -O2 -m32 -march=native -fomit-frame-pointer -fforce-addr -falign-jumps -falign-functions -fno-guess-branch-probability -Wall -Wextra -Winline --param inline-unit-growth=350 -finline-limit=3500 -Wno-unused -pedantic -ffunction-sections -fdata-sections -fpermissive
CXXFLAGS = $(CFLAGS)
CPPFLAGS = -m32 -DNDEBUG
LDFLAGS = -s -m32 -Wl,--gc-sections
ifdef _WIN32
  LDFLAGS += -static
endif
ARFLAGS = -rc


/make_dep/ = @echo "Making Dependency File $@"; $(CC) $(CPPFLAGS) -MM -MG -MP -MT "$(@:.d=.o) $@" $< -MF $@

%.c :
%.c.d : %.c
	$(/make_dep/)
%.c.o : %.c
	@echo "Compiling $<"; $(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

%.cpp :
%.cpp.d : %.cpp
	$(/make_dep/)
%.cpp.o : %.cpp
	@echo "Compiling $<"; $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

%.rc :
%.rc.d :
%.rc.o : %.rc
	@echo "Compiling $<"; $(WINDRES) -i $< --input-format=rc -o $@ -O coff

